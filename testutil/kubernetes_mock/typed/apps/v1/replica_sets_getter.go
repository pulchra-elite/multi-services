// Code generated by mockery 2.12.1. DO NOT EDIT.

package kubernetes_mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/client-go/kubernetes/typed/apps/v1"
)

// ReplicaSetsGetter is an autogenerated mock type for the ReplicaSetsGetter type
type ReplicaSetsGetter struct {
	mock.Mock
}

// ReplicaSets provides a mock function with given fields: namespace
func (_m *ReplicaSetsGetter) ReplicaSets(namespace string) v1.ReplicaSetInterface {
	ret := _m.Called(namespace)

	var r0 v1.ReplicaSetInterface
	if rf, ok := ret.Get(0).(func(string) v1.ReplicaSetInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.ReplicaSetInterface)
		}
	}

	return r0
}

// NewReplicaSetsGetter creates a new instance of ReplicaSetsGetter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewReplicaSetsGetter(t testing.TB) *ReplicaSetsGetter {
	mock := &ReplicaSetsGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
